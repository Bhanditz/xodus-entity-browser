plugins {
    id 'war'
    id "ca.coglinc.javacc" version "2.3.1"
}

apply plugin: 'kotlin'
apply plugin: 'org.akhikhl.gretty'

gretty {
    servletContainer = 'jetty9'
    httpEnabled = true
    httpPort = 18080
    jvmArgs "-Dserver.port=18080"
    contextPath = ""
}

configurations {
    frontend
}

def javaCCFolder = "src/main/generated"

sourceSets {
    main {
        java {
            srcDir file(javaCCFolder)
        }
    }
}

dependencies {
    compile lib('org.jetbrains.kotlin:kotlin-stdlib')
    compile lib('org.jetbrains.kotlin:kotlin-reflect')

    compile lib('javax.servlet:javax.servlet-api')

    compile lib('org.webjars:bootstrap')
    compile lib('org.webjars:angular-ui-select')
    compile lib('org.webjars:font-awesome')

    compile lib('ch.qos.logback:logback-classic')
    compile lib('ch.qos.logback:logback-core')

    compile lib('org.glassfish.jersey.media:jersey-media-json-jackson')
    compile lib('org.glassfish.jersey.containers:jersey-container-servlet')
    compile lib('org.eclipse.jetty:jetty-runner')

    frontend project(path: ':entity-browser-frontend', configuration: 'compile')

    compile lib('org.jetbrains.xodus:xodus-environment')
    compile lib('org.jetbrains.xodus:xodus-entity-store')
    compile lib('org.jetbrains.xodus:xodus-openAPI')

    testCompile lib('org.mockito:mockito-all')
    testCompile lib('junit:junit')
}

war {
    dependsOn configurations.frontend
    archiveName = "xodus-entity-browser.war"
    destinationDir = globalArtifactsBuildDir
    from {
        // use of closure defers configuration evaluation until execution time
        configurations.frontend.collect { zipTree(it) }
    }
}

clean {
    delete javaCCFolder
}

compileJavacc {
    inputDirectory = file('src/main/javacc')
    outputDirectory = file(javaCCFolder + '/com/lehvolk/xodus/web/search') // plugin wont create package for generated classes
}