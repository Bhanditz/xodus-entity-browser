plugins {
    id "ca.coglinc.javacc" version "2.3.1"
}

apply plugin: 'kotlin'

configurations {
    frontend
}

def javaCCFolder = "src/main/generated"

sourceSets {
    main {
        java {
            srcDir file(javaCCFolder)
        }
    }
}

dependencies {
    compile lib('org.jetbrains.kotlin:kotlin-stdlib')
    compile lib('org.jetbrains.kotlin:kotlin-reflect')

    compile lib('ch.qos.logback:logback-classic')
    compile lib('ch.qos.logback:logback-core')
    
    frontend project(path: ':entity-browser-frontend', configuration: 'compile')

    compile lib('org.jetbrains.xodus:xodus-environment')
    compile lib('org.jetbrains.xodus:xodus-entity-store')
    compile lib('org.jetbrains.xodus:xodus-openAPI')
    compile lib('com.sparkjava:spark-kotlin')
    compile lib('com.sparkjava:spark-core')
    compile lib('com.fasterxml.jackson.module:jackson-module-kotlin')

    testCompile lib('org.mockito:mockito-all')
    testCompile lib('junit:junit')
}

jar {
    dependsOn configurations.frontend
    archiveName = "xodus-entity-browser.jar"
    destinationDir = globalArtifactsBuildDir
    from {
        // use of closure defers configuration evaluation until execution time
        configurations.frontend.collect { zipTree(it) }
    }
}

clean {
    delete javaCCFolder
}

compileJavacc {
    inputDirectory = file('src/main/javacc')
    outputDirectory = file(javaCCFolder + '/com/lehvolk/xodus/web/search') // plugin wont create package for generated classes
}